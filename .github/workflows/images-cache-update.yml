name: Generate Bitbake Artifacts (Self Hosted)

# An action to perform a manual bitbake build process for
# the selected parameters found in workflow_dispatch

# Requires
# runner to have a label = runner.name

on:
  workflow_dispatch:
    inputs:
      DISTRO:
        required: true
        type: choice
        default: distro-core
        options:
          - distro-core
          - distro-core-gui
      MACHINE:
        required: true
        type: choice
        default: sbc-gene-bt05
        options:
          - com-cexpress-bt
          - com-cexpress-sl
          - sbc-gene-bt05
          - sbc-raspberrypi5
          - sbc-xavier-nx-devkit
      MANIFEST_URL:
        required: true
        type: choice
        default: https://github.com/distro-core/distro-manifest.git
        options:
          - https://github.com/distro-core/distro-manifest.git
      MANIFEST_BRANCH:
        required: true
        type: choice
        default: main
        options:
          - main
      MANIFEST_NAME:
        required: true
        type: choice
        default: distro-head-scarthgap.xml
        options:
          - distro-head-kirkstone.xml
          - distro-head-scarthgap.xml

jobs:

  assigned-runner:
    name: Labeled Runner Selection
    if: ${{ always() }}
    runs-on: [ self-hosted, almalinux ]
    outputs:
      RUNNER: ${{ runner.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

  job-execute:
    name: Job Execute
    needs: [ assigned-runner ]
    runs-on: ${{ needs.assigned-runner.outputs.RUNNER }}
    permissions:
      actions: write
    continue-on-error: false
    steps:
      - name: Initialize
        shell: bash
        run: |
          echo "::add-mask::$HOME"
          echo "::add-mask::$GITHUB_WORKSPACE"
          echo "::debug::set local paths"
          for path in $HOME/.local/bin $GITHUB_WORKSPACE/.repo/repo; do
            if [[ ! :$PATH: == *:"$path":* ]]; then
              mkdir -p $path
              echo "PATH=$path:$PATH" >> $GITHUB_ENV
            fi
          done
          echo "::debug::initialize git settings"
          [[ -n "$(command -v git)" ]] || (echo "::error::git not found"; exit 1)
          git config --global user.name "RPM Signing"
          git config --global user.email "release@internal"
          git config --global http.sslVerify true
          echo "::debug::initialize repo tool"
          curl --silent https://storage.googleapis.com/git-repo-downloads/repo > $HOME/.local/bin/repo
          chmod a+rx $HOME/.local/bin/repo
      - name: Repo Init & Sync
        shell: bash
        run: |
          echo "::debug::repo init and sync"
          [[ -n "$(command -v repo)" ]] || (echo "::error::repo not found"; exit 1)
          rm -fr .repo
          printf "\n\ny\n" | repo init --manifest-url ${{ github.event.inputs.MANIFEST_URL }} --manifest-branch ${{ github.event.inputs.MANIFEST_BRANCH }} --manifest-name ${{ github.event.inputs.MANIFEST_NAME }} --no-clone-bundle
          repo sync
      - name: Bitbake
        shell: bash
        run: |
          export DISTRO=${{ github.event.inputs.DISTRO }}
          export MACHINE=${{ github.event.inputs.MACHINE }}
          export BUILD_DIR=$GITHUB_WORKSPACE/build/$MACHINE
          export DEPLOY_DIR=$GITHUB_WORKSPACE/artifacts/$MACHINE
          export DL_DIR=$GITHUB_WORKSPACE/build/downloads
          export SSTATE_CACHE=$GITHUB_WORKSPACE/build/sstate-cache
          TEMPLATECONF=$GITHUB_WORKSPACE/layers/meta-distro/conf/templates/$DISTRO
          rm -fr $BUILD_DIR $DEPLOY_DIR
          mkdir -p $BUILD_DIR $DEPLOY_DIR
          {
          TEMPLATECONF=$TEMPLATECONF . $GITHUB_WORKSPACE/layers/poky/oe-init-build-env $BUILD_DIR
          } >/dev/null
          bitbake distro-image distro-sdk-image --runall=fetch
          # bitbake distro-image distro-sdk-image
          cd $GITHUB_WORKSPACE
          rm -fr $BUILD_DIR $DEPLOY_DIR
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloads-${{ github.event.inputs.DISTRO }}-${{ github.event.inputs.MACHINE }}
          compression-level: 9
          if-no-files-found: error
          overwrite: true
          path: |
            build/downloads/*
            !build/downloads/git2/
            !build/downloads/*.done
            !build/downloads/*.lock
            !build/downloads/tmp*
            !build/downloads/*tmp
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          # repository: distro-core/distro-manifest
          name: downloads-${{ github.event.inputs.DISTRO }}-${{ github.event.inputs.MACHINE }}
          path: |
            build/downloads/*
