name: Scheduled Refresh Bitbake Downloads

# An action to perform a initialization of build/downloads

on:
  workflow_dispatch:

env:
  MANIFEST_URL: https://github.com/distro-core/distro-manifest.git
  MANIFEST_BRANCH: main
  MANIFEST_NAME: distro-head-scarthgap.xml

jobs:

  # Requires runner to have a label = runner.name
  get-runner:
    if: ${{ always() }}
    runs-on: [ self-hosted, debian ]
    outputs:
      RUNNER: ${{ runner.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
      - run: echo "::notice::selected runner ${{ runner.name }}"

  job-init:
    needs: [ get-runner ]
    runs-on: ${{ needs.get-runner.outputs.RUNNER }}
    permissions:
      actions: write
    continue-on-error: false
    steps:
      - shell: bash
        run: |
          echo "::add-mask::$HOME"
          echo "::add-mask::$GITHUB_WORKSPACE"
          echo "::debug::set local paths"
          for path in $HOME/.local/bin $GITHUB_WORKSPACE/.repo/repo; do
            if [[ ! :$PATH: == *:"$path":* ]]; then
              mkdir -p $path
              echo "PATH=$path:$PATH" >> $GITHUB_ENV
            fi
          done
          echo "::debug::initialize git settings"
          [[ -n "$(command -v git)" ]] || (echo "::error::git not found"; exit 1)
          git config --global user.name "Builder"
          git config --global user.email "release@internal"
          git config --global http.sslVerify true

  job-repo:
    needs: [ get-runner, job-init ]
    runs-on: ${{ needs.get-runner.outputs.RUNNER }}
    permissions:
      actions: write
    continue-on-error: false
    steps:
      - shell: bash
        run: |
          echo "::debug::repo init and sync"
          [[ -n "$(command -v repo)" ]] || (echo "::error::repo not found"; exit 1)
          rm -fr .repo
          printf "\n\ny\n" | repo init --manifest-url $MANIFEST_URL --manifest-branch $MANIFEST_BRANCH --manifest-name $MANIFEST_NAME --no-clone-bundle
          repo sync

  job-bitbake:
    needs: [ get-runner, job-repo ]
    runs-on: ${{ needs.get-runner.outputs.RUNNER }}
    permissions:
      actions: write
    continue-on-error: false
    strategy:
      matrix:
        DISTRO:
          - distro-core
          - distro-core-gui
        MACHINE:
          - com-cexpress-bt
          - com-cexpress-sl
          - sbc-gene-bt05
          - sbc-raspberrypi5
          - sbc-xavier-nx-devkit
    steps:
      - shell: bash
        run: |
          echo "::group::${{ matrix.DISTRO }} ${{ matrix.MACHINE }}"
          export DISTRO=${{ matrix.DISTRO }}
          export MACHINE=${{ matrix.MACHINE }}
          export BUILD_DIR=$GITHUB_WORKSPACE/build/$MACHINE
          export DEPLOY_DIR=$GITHUB_WORKSPACE/artifacts/$MACHINE
          export DL_DIR=$GITHUB_WORKSPACE/build/downloads
          export SSTATE_CACHE=$GITHUB_WORKSPACE/build/sstate-cache
          TEMPLATECONF=$GITHUB_WORKSPACE/layers/meta-distro/conf/templates/$distro
          rm -fr $BUILD_DIR $DEPLOY_DIR
          mkdir -p $BUILD_DIR $DEPLOY_DIR
          TEMPLATECONF=$TEMPLATECONF . $GITHUB_WORKSPACE/layers/poky/oe-init-build-env $BUILD_DIR
          bitbake --runall=fetch distro-image distro-sdk-image
          cd $GITHUB_WORKSPACE
          rm -fr $BUILD_DIR $DEPLOY_DIR
          echo "::endgroup"

  job-artifacts:
    needs: [ get-runner, job-bitbake ]
    runs-on: ${{ needs.get-runner.outputs.RUNNER }}
    permissions:
      actions: write
    continue-on-error: false
    steps:
      - uses: actions/upload-artifact@v4
        with:
          name: build-downloads
          compression-level: 9
          if-no-files-found: error
          overwrite: true
          path: |
            build/downloads/*
            !build/downloads/git2/
            !build/downloads/*.done
            !build/downloads/*.lock
            !build/downloads/tmp*
            !build/downloads/*tmp

  job-sstate-cache:
    needs: [ get-runner, job-artifacts ]
    runs-on: ${{ needs.get-runner.outputs.RUNNER }}
    permissions:
      actions: write
    continue-on-error: false
    steps:
      - uses: actions/upload-artifact@v4
        with:
          name: build-sstate-cache
          compression-level: 9
          if-no-files-found: error
          overwrite: true
          path: |
            build/sstate-cache/**/*
            !build/sstate-cache/**/.lock
            !build/sstate-cache/**/*tmp
            !build/sstate-cache/**/tmp*
