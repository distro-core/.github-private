name: Images Build

# An action to perform a default images build for the selected
# devices. Requires organization secrets vars.PUBLIC_SSH_KEY and
# secrets.PRIVATE_SSH_KEY be defined and valid for successful sync to
# the repositories referenced in the manifest.

# Requires
# vars.PUBLIC_SSH_KEY
# secrets.PRIVATE_SSH_KEY

# Runs on
# [ self-hosted, almalinux ]

on:
  workflow_dispatch:

env:
  DISTROS: distro-core distro-full
  MACHINES: sbc-gene-bt06
  IMAGES: distro-image distro-sdk-image
  MANIFEST_URI: git@github.com:distro-core/distro-manifest.git
  MANIFEST_BRANCH: main
  MANIFEST_NAME: distro-head-scarthgap.xml

defaults:
  run:
    shell: bash

# concurrency:
#   group: ${{ github.name }}-${{ github.workflow }}-${{ github.head_ref }}
#   cancel-in-progress: true

jobs:
  job-prepare:
    runs-on: [ self-hosted, almalinux ]
    permissions:
      actions: write
    steps:
      - name: install ssh keys
        run: |
          cat >id_ed25519.pub <<EOF
          ${{ vars.PUBLIC_SSH_KEY }}
          EOF
          cat >${HOME}/.ssh/id_ed25519 <<EOF
          ${{ secrets.PRIVATE_SSH_KEY }}
          EOF
          install -d -m 0700 ${HOME}/.ssh
          install -D -m 0600 id_ed25519 ${HOME}/.ssh/id_ed25519
          install -D -m 0644 id_ed25519.pub ${HOME}/.ssh/id_ed25519.pub
          if ! grep -q -e '.ssh/id_ed25519$' ${HOME}/.ssh/config; then
            printf '\nHost *\n  IdentitiesOnly yes\n  IdentityFile %s\n\n%s' "${HOME}/.ssh/id_ed25519" "$(cat ${HOME}/.ssh/config)" >ssh_config
            install -D -m 0644 ssh_config ${HOME}/.ssh/config
          fi
          ssh git@github.com || true
      - name: install local path
        run: |
          localpath=${HOME}/.local/bin
          mkdir -p $localpath
          echo "LOCAL_PATH=$localpath" >> $GITHUB_ENV
          echo "PATH=$localpath:$PATH" >> $GITHUB_ENV

  job-work:
    needs: job-prepare
    runs-on: [ self-hosted, almalinux ]
    permissions:
      actions: write
    steps:
      - name: install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ${HOME}/.local/bin/repo
          chmod a+rx ${HOME}/.local/bin/repo
          [ -n "$(command -v repo)" ] || exit 1
      - name: repo init and sync
        shell: bash
        run: |
          repo init --manifest-url=$MANIFEST_URI --manifest-branch=$MANIFEST_BRANCH --manifest-name=$MANIFEST_NAME --no-clone-bundle --no-repo-verify
          repo sync
      - name: scripts/images-build fetch
        run: |
          for distro in $DISTROS; do
            for machine in $MACHINES; do
              scripts/images-build --distro=$distro --machine=$machine --target="--runall=fetch $IMAGES"
            done
          done
      - name: scripts/images-build build
        run: |
          export BB_NUMBER_THREADS=$(( $(nproc) * 2 / 5 ))
          export PARALLEL_MAKE=-j$(( $(nproc) * 2 / 5 ))
          scripts/images-build --target="$IMAGES"
