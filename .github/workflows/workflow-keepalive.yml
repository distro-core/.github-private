name: Scheduled Workflow Keepalive

# An action to perform a reset on github actions
# workflows. According to github, repository actions
# can be suspended if the repository is inactive for
# 60 days.

# Requires
# vars.PUBLIC_SSH_KEY
# secrets.PRIVATE_SSH_KEY

# Runs on
# [ self-hosted, almalinux ]

on:
  workflow_dispatch:
  schedule:
    - cron: '15 0 * * *'

defaults:
  run:
    shell: bash

# concurrency:
#   group: ${{ github.name }}-${{ github.workflow }}-${{ github.head_ref }}
#   cancel-in-progress: true

jobs:
  job:
    runs-on: [ self-hosted, almalinux ]
    permissions:
      actions: write
    steps:
      ### PREPARE
      - name: install ssh keys
        run: |
          cat >id_ed25519.pub <<EOF
          ${{ vars.PUBLIC_SSH_KEY }}
          EOF
          cat >id_ed25519 <<EOF
          ${{ secrets.PRIVATE_SSH_KEY }}
          EOF
          install -d -m 0700 ${HOME}/.ssh
          install -D -m 0600 id_ed25519 ${HOME}/.ssh/id_ed25519
          install -D -m 0644 id_ed25519.pub ${HOME}/.ssh/id_ed25519.pub
          if ! grep -q -e '.ssh/id_ed25519$' ${HOME}/.ssh/config; then
            printf '\nHost *\n  IdentitiesOnly yes\n  IdentityFile %s\n\n%s' "${HOME}/.ssh/id_ed25519" "$(cat ${HOME}/.ssh/config)" >ssh_config
            install -D -m 0644 ssh_config ${HOME}/.ssh/config
          fi
          ssh git@github.com || true
      - name: install local path
        run: |
          localpath=${HOME}/.local/bin
          mkdir -p $localpath
          echo "LOCAL_PATH=$localpath" >> $GITHUB_ENV
          echo "PATH=$localpath:$PATH" >> $GITHUB_ENV

      ### WORK
      - uses: distro-core/gh-workflow-keepalive@v1

      # - name: checkout self
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ${{ github.repository }}
      #     ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}
      # - name: commit timestamp
      #   shell: bash
      #   run: |
      #     timestamp=$(date -Isec)
      #     branch=timestamp-${timestamp//:/-}
      #     git checkout -b $branch
      #     echo $timestamp >.timestamp
      #     git add .timestamp
      #     git commit -m "Update $timestamp"
      #     git push -u origin $branch
